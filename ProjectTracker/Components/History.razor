@inject HistoryLogService HistoryLogService

<div class="d-grid">
    <hr class="my-2" />
    <table class="history-table">
        <thead>
            <tr>
                <th>User</th>
                <th>Timestamp</th>
                <th>Changes</th>
            </tr>
        </thead>
        <tbody>
            @if (_logsDictionary is not null)
            {
                @foreach (var log in _logsDictionary)
                {
                    <tr>
                        <td width="200px" align="center">@log.Value.First().User</td>
                        <td width="200px" align="center">@log.Key</td>
                        <td>
                            <ul>
                                @foreach(var val in log.Value)
                                {
                                    <li>
                                        <div class="d-grid history-change">
                                            <strong>@val.Description</strong>
                                            @if (!string.IsNullOrEmpty(val.Old) || !string.IsNullOrEmpty(val.New))
                                            {
                                                <div class="mx-2"><strong>From: </strong>@val.Old</div>
                                                <div class="mx-2" style="padding-left: 1.4em;"><strong>To: </strong>@val.New</div>
                                            }
                                        </div>                                    
                                    </li>
                                }
                            </ul>
                        </td>
                    </tr>
                }
            }            
        </tbody>
    </table>    
</div>

@code {
    IEnumerable<HistoryLog>? _logs;

    Dictionary<DateTime, IEnumerable<HistoryLog>>? _logsDictionary => _logs?
        .GroupBy(x => x.Timestamp)
        .ToDictionary(x => x.Key, x => x.AsEnumerable());

    [Parameter]
    public int? RelationId { get; set; }

    [Parameter]
    public int? RelationTypeId { get; set; }

    string GetTitle(HistoryLog log){
        var oldValue = string.IsNullOrEmpty(log.Old) ? "<Empty>" : log.Old;
        var newValue = string.IsNullOrEmpty(log.New) ? "<Empty>" : log.New;
        return $"From: {oldValue} \n     To: {newValue}";
    }

    protected override async Task OnParametersSetAsync()
    {
        if (RelationId is null || RelationTypeId is null)
            return;

        _logs = await HistoryLogService.GetSome(x => x.RelationId == RelationId && x.RelationTypeId == RelationTypeId);
    }
}
