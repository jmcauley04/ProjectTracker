@page "/punchlist"
@inject PunchlistController PunchlistController

<PageTitle>Project Tracker - Punchlist</PageTitle>

<div class="d-flex justify-content-between mb-4">
    <h3>Punchlist</h3>
    <ProjectTracker.Components.MetricTile Title="Not approved" Value="@_entries?.Count(x => x.ApprovedBy is null)" />
    <ProjectTracker.Components.Charts.BarChart Data="_entriesSummary" MaxValue="_maxValue" />
</div>
<div class="d-grid gap-4 align-items-start">
    @if(_entries is null){
        <h3>Loading...</h3>
    }
    else {
        foreach (var entry in _entries)
        {
            <ProjectTracker.Components.PunchlistCard Entry="entry" EntryChanged="OnEntryChanged" />
            <hr />
        }
    }
    <button class="btn btn-secondary mb-4" @onclick="AddEntry">Add Punchlist Item</button>
</div>

@code {
    List<PunchlistEntry>? _entries;
    Dictionary<string, int>? _entriesSummary;
    int _maxValue;

    int GetMaxValue(){
        if ((_entriesSummary?.Count ?? 0) == 0)
            return 0;
        return _entriesSummary?.Max(x => x.Value) ?? 0;
    }

    protected override async Task OnInitializedAsync()
    {
        _entries = await PunchlistController.GetPunchlist();
        CalculateSummary();
    }

    void AddEntry()
    {
        if (_entries is null) return;
        _entries.Add(new PunchlistEntry());
    }

    void OnEntryChanged(PunchlistEntry entity){        
        CalculateSummary();
    }

    void CalculateSummary()
    {
        if (_entries is null) return;
        var dict = new Dictionary<string, int>();
        foreach(var entry in _entries){
            if (!string.IsNullOrEmpty(entry.ApprovedBy))
                continue;

            var key = entry.Status?.Name ?? "NA";
            if(dict.ContainsKey(key))
                dict[key] ++;
            else
                dict[key] = 1;
        }
        _entriesSummary = dict;

        if ((_entriesSummary?.Count ?? 0) == 0)
            _maxValue = 0;
        else
            _maxValue = _entriesSummary?.Max(x => x.Value) ?? 0;
    }    
}
